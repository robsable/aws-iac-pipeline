AWSTemplateFormatVersion: 2010-09-09
Description: Automated IaC build and release pipeline

Parameters:
  AppName:
    Type: String
    Description: "Name of your Application"
    Default: "myapp"

  ConnectionID:
    Type: String
    Description: "CodeStar Connection ID (must be 36 characters)"
    MinLength: 36
    MaxLength: 36

  SourceRepo:
    Type: String
    Description: "Full path to GitHub.com repo (Example: some-user/my-repo)"

Resources:
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AppName}-${AWS::AccountId}-build-artifacts'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
          
  BuildArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BuildArtifactsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Sub 'arn:${AWS::Partition}:s3:::${BuildArtifactsBucket}/*'
            Principal:
              'AWS': !GetAtt CodeBuildServiceRole.Arn
            Condition:
              Bool:
                'aws:ViaAWSService': false
            
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'  
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: !Sub 'CodeBuildBasePolicy-${AppName}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AppName}-build'
                  - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AppName}-build:*'
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::codepipeline-${AWS::Region}-*'
              - Effect: Allow
                Action:
                  - 'codecommit:GitPull'
                Resource: !Sub 'arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${AppName}'
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Resource: 
                  - !Sub 'arn:${AWS::Partition}:s3:::${BuildArtifactsBucket}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${BuildArtifactsBucket}/*'

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub 'CodePipelineServicePolicy-${AppName}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                  - 'iam:CreateRole'
                  - 'codestar-connections:*'
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'cloudformation:*'
                  - 'servicecatalog:*'
                  - 'lambda:InvokeFunction'
                Resource: '*'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name: !Sub ${AppName}-build
      Source: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        Type: LINUX_CONTAINER
      ConcurrentBuildLimit: 1
      Artifacts: 
        Type: CODEPIPELINE
      LogsConfig: 
        CloudWatchLogs:
          GroupName: !Sub /aws/codebuild/${AppName}-build
          Status: ENABLED
      QueuedTimeoutInMinutes: 30
      ResourceAccessRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      ServiceRole: !GetAtt 
        - CodeBuildServiceRole
        - Arn
      Visibility: PRIVATE

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AppName}-pipeline
      RoleArn: !GetAtt 
        - CodePipelineServiceRole
        - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GetSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeStarSourceConnection
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !Sub  arn:${AWS::Partition}:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/${ConnectionID}
                FullRepositoryId: !Ref SourceRepo
                BranchName: "main"
                OutputArtifactFormat: "CODE_ZIP"
              RunOrder: 1
        - Name: Build-Deploy
          Actions:
            - Name: ApplyTerraform
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Sub ${AppName}-build
                PrimarySource: SourceArtifact
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
            - Name: DeployCloudFormation
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Sub ${AppName}-stack
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
                TemplatePath: SourceArtifact::cloudformation/cf-resources.yml
                OutputFileName: !Sub ${AppName}-output.json
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: CfnOutput
              RunOrder: 1
      ArtifactStores:
        - ArtifactStore:
            Type: S3
            Location: !Ref BuildArtifactsBucket
          Region: !Ref AWS::Region
    DependsOn: 
      - CodeBuildProject

  CloudFormationDeployRole:
    Type: AWS::IAM::Role
    DeletionPolicy : Retain
    UpdateReplacePolicy : Retain
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSQSFullAccess
      Policies:
        - PolicyName: !Sub 'CloudFormationDeployPolicy-${AppName}'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: 'cloudwatch:PutMetricAlarm'
                Resource: 'arn:aws:cloudwatch:*:*:alarm:*'
